name: "Release"

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install gsht
        run: |
          wget https://github.com/NekoOs/gsht.sh/releases/download/v0.1.0/gsht
          sudo mv gsht /usr/local/bin/gsht
          sudo chmod a+x /usr/local/bin/gsht
      - name: Transpile
        run: |
          gsht --input src/tfsuit.sh --output tfsuit
          zip --junk-paths tfsuit tfsuit
      - name: Tag
        if: github.event.pull_request.merged
        id: tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: main
          release_strategy: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        if: github.event.pull_request.merged
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: github.event.pull_request.merged
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./tfsuit.zip
          asset_name: tfsuit
          asset_content_type: application/zip
      - name: Update Major And Minor Version
        id: major-minor-versions
        run: |
          MAJOR=${VERSION%%.*}
          MINOR=${VERSION%.*}
          git config --global user.email ""
          git config --global user.name "github-action"
          git tag -fa "$MAJOR" -m "Update major version tag $MAJOR"
          git tag -fa "$MINOR" -m "Update minor version tag $MINOR"
          git push origin "$MAJOR" --force
          git push origin "$MINOR" --force
          echo "major-version=$MAJOR" >> "$GITHUB_OUTPUT"
          echo "minor-version=$MINOR" >> "$GITHUB_OUTPUT"
        env:
          VERSION: ${{ steps.tag.outputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Or Update Release Major
        uses: joutvhu/create-release@v1
        with:
          tag_name: ${{ steps.major-minor-versions.outputs.major-version }}
          name: ${{ steps.major-minor-versions.outputs.major-version }}
          draft: false
          prerelease: false
          on_release_exists: "update"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Or Update Release Minor
        uses: joutvhu/create-release@v1
        with:
          tag_name: ${{ steps.major-minor-versions.outputs.minor-version }}
          name: ${{ steps.major-minor-versions.outputs.minor-version }}
          draft: false
          prerelease: false
          on_release_exists: "update"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
