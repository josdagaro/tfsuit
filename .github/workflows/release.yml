name: Release

on:
  pull_request:
    types: [closed]           # solo cuando el PR se fusiona
    branches: [main]

permissions:
  contents: write             # para crear tags y releases
  packages: write             # para publicar Docker

jobs:
  # ------------------------------------------------------------------ #
  tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}

      # 1️⃣ Calcula la versión a partir del label (major/minor/patch)
      - id: semver
        uses: K-Phoen/semver-release-action@v1.3.2
        with:
          release_branch: main
          release_strategy: tag
          tag_format: 'v%major%.%minor%.%patch%'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ------------------------------------------------------------------ #
  goreleaser:
    needs: tag
    runs-on: ubuntu-latest
    if: needs.tag.outputs.version != ''
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with: {go-version: 1.24}

      - run: |
          go vet ./...
          go test ./...

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: goreleaser/goreleaser-action@v5
        with:
          version: v2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ------------------------------------------------------------------ #
  update-major-minor:
    needs: goreleaser
    runs-on: ubuntu-latest
    if: needs.tag.outputs.version != ''
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}

      - name: Update major/minor moving tags
        run: |
          VERSION=${{ needs.tag.outputs.version }}
          MAJOR=${VERSION%%.*}
          MINOR=${VERSION%.*}
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git tag -fa "$MAJOR" -m "Update tag $MAJOR"
          git tag -fa "$MINOR" -m "Update tag $MINOR"
          git push origin "$MAJOR" --force
          git push origin "$MINOR" --force

  # ------------------------------------------------------------------ #
  changelog:
    needs: goreleaser
    runs-on: ubuntu-latest
    if: needs.tag.outputs.version != ''
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CHANGELOG_TOKEN }}

      - name: Generate CHANGELOG
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit & push CHANGELOG
        run: |
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git add CHANGELOG.md
          git commit -m "chore(docs): update changelog" || true
          git push
